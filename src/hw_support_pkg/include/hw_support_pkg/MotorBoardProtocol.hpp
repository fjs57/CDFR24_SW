#ifndef MOTOR_BOARD_CONFIG_HPP__
#define MOTOR_BOARD_CONFIG_HPP__

/**
 * messages length per service and direction
 */

#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_ID_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_STATUS_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_ACK_ERRORS_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_CURRENT_SPEEDS_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_CURRENT_POSITIONS_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_ENABLE_LENGTH 2
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_SET_SPEEDS_LENGTH 8
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_SET_ACCELERATIONS_LENGTH 4
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_SOFT_STOP_LENGTH 0
#define MOTOR_BOARD_PROTOCOL_TX_SERVICE_HARD_STOP_LENGTH 0

#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_ID_LENGTH 1
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_STATUS_LENGTH 1
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_CURRENT_SPEEDS_LENGTH 8
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_CURRENT_POSITIONS_LENGTH 8
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_ENABLE_LENGTH 2
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_SET_SPEEDS_LENGTH 8
#define MOTOR_BOARD_PROTOCOL_RX_SERVICE_SET_ACCELERATIONS_LENGTH 4

namespace motor_board
{

    typedef enum 
    {
        ID = 0,
        STATUS,
        ACK_ERRORS,
        CURRENT_SPEEDS,
        CURRENT_POSITIONS,
        ENABLE,
        SET_SPEEDS,
        SET_ACCELERATIONS,
        SOFT_STOP,
        HARD_STOP,
        MAX
    }   
    services_t;

};
#endif // MOTOR_BOARD_CONFIG_HPP__